[tool.poetry]
name = "advent_of_code"
version = "0.1.0"
description = ""
authors = ["raphaellndr <raph.landure@gmail.com>"]
readme = "README.md"
packages = [
    {include="aoc", from="src"}
]

[tool.poetry.dependencies]
python = "~3.10"

[tool.poetry.dev-dependencies]
ruff = "0.0.152"
pre-commit = "2.20.0"
autoflake = "2.0.0"
pytest = "7.2.0"
pylint = "2.15.7"
mypy = "0.991"
black = "22.10.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
euler = "aoc.__main__:main"

[tool.black]
line-length = 100

[tool.pylint.basic]
good-names = [
    "i", "j", "k", "ex", "Run", "_", # Default names that come from the pylint configuration.
    "x", "y", "z"
]

[tool.pylint.format]
# Compatibility with black (source: https://black.readthedocs.io/en/stable/guides/using_black_with_other_tools.html#pylint)
max-line-length = 100

[tool.pylint.master]
ignore = [".git", ".venv", "scripts"]
ignore-patterns = "test_.*?py"

[tool.pylint.similarities]
min-similarity-lines=8
ignore-imports=true
ignore-signatures=true

[tool.pytest.ini_options]
addopts = "--doctest-modules --basetemp .pytest"

[tool.coverage.report]
show_missing = true
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",

    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
]
fail_under = 20

[tool.ruff]
line-length = 100
target-version = "py39"
select = ["E", "F"]

[tool.mypy]
files = ["src/aoc"]
